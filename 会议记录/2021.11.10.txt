1.数据库设计完成：
是否需要增加人员信息表-用户，用户密码-连接成功
2.面对扩展开放，对修改关闭，采用最简单的策略模式对模式进行重构

3.完成数据的提取和画图功能
家长端子系统：大霖、我、振庭
教务端子系统：书桦、
老师端子系统：鑫灿、远杭
数据库设计和维护：燕波

4.代码上传到github上，保持一致
5.数据库维护和更新，GUI设计
6.补概要设计文档和测试文档、用户手册

时间：11.13完成，开会：11.13下午3.-5. 107

任务：
GUI画面设计-VIEW设计：2个人
具体算法的实现：每个子系统2*3=6个人
数据库的优化和维护：2个人

MVC结构+策略模式设计
数据类型定义：数据之间的传输-采用可变长的动态Vector:防止后面需要更改数据类型

重点：数据库查询的优化、界面的美观程度


数据类型：
学生端只有第一个功能是一维的，其他的都是二维的

教师端也只有查看自己信息是一维的，其他的也是二维的

教务端功能过于庞杂，需要重新修改和整理（功能先简化，然后再慢慢增加）

GUI和后端算法需要完成：统一数据接口
Arraylist
https://www.w3cschool.cn/java/java-vector-class.html
https://www.runoob.com/java/java-arraylist.html
https://blog.csdn.net/zwlove5280/article/details/109299801

一维和二维的Arraylist:
1.首先修改接口的返回值类型为一维或者二维的Arraylist
2.在实现接口的行为实例类中修改返回值为一维或者二维的Arraylist，同时使用SQL查询语言完成数据的查询，并存到一维或者二维的Arraylist中
3.在parents类中修改perform方法，将其返回值改成一维或者二维的Arraylist，然后加上return 调用行为接口的方法
4.在controller类中修改get方法，主要是调用view方法的参数增加为model.perform方法
5.在view中修改对应的方法，增加它的参数为一维或者二维的Arraylist
6.在main 函数中，首先创建一个controller，然后set它对应的model和view，然后设置它的行为实例，然后再调用相应的view方法

1.MVC/架构设计/
2.分工
3.难点：